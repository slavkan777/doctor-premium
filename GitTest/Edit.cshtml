@using System.Activities.Statements
@using System.Globalization
@using DoctorPremium.Web.Helpers
@model DoctorPremium.Web.Models.PatientEditViewModel
@{
    ViewBag.Title = "Добавление нового пациента";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section head {
    @Scripts.Render("~/bundles/assetsPatientJS")
    @Scripts.Render("~/bundles/ChosenJS")
    @Scripts.Render("~/bundles/UploadJS")
    @Styles.Render("~/Content/assetsPatientCSS")
    @Styles.Render("~/Content/ChosenCSS")
    @Styles.Render("~/bundles/UploadCSS")


    @*<script type="text/javascript" src="~/Scripts/jquery-1.9.1.min.js"></script>*@
    <style type="text/css">
        .td-class {
            font-size: 11px;
            text-align: left;
            font-weight: bold;
        }

        .area2col {
            width: 36px;
        }

        .col2 {
            width: 25px;
        }

        .thumbnail > img {
            display: block;
            height: auto;
            max-width: 80px;
        }
    </style>
}


<div class="row">
    @*<div class="col-sm-12">*@
    @*<div class="panel panel-default">*@
    <div class="heading">
        @*style="background-color: #339966; color: #f0fff0"*@
        <h3>@Resources.PatientInfo.PatientLabel</h3>
        @if (Model.PatientId > 0)
        {
            <span class="font-bold top13">@FullNameHelper.GetFullName(Model.LastName, Model.FirstName, Model.SurName)</span>
            if (ViewBag.Debt >= 0)
            {
                <span class="icon16 icomoon-icon-coin left" style="float: right;font-size:20px"> </span>
                <span class="font-bold top13" style="color:green; float: right; margin-left: 15px; font-size: 25px; margin-right: 15px;">@ViewBag.Debt.ToString("0.00")</span>
                <span class="font-bold top13 hidden-xs" style="color:green; float: right; font-size: 25px;    margin-right: 5px;">@Resources.PatientInfo.BalanceVal:</span>
            }
            else
            {
                <span class="icon16 icomoon-icon-coin left" style="float: right;font-size:20px;    margin-right: 5px;"> </span>
                <span class="font-bold top13" style="color:red; float: right; margin-left: 15px; font-size:25px;    margin-right: 15px;">@ViewBag.Debt.ToString("0.00")</span>
                <span class="font-bold top13 hidden-xs" style="color:red; float: right; font-size: 25px;    margin-right: 5px;">@Resources.PatientInfo.BalanceVal:</span>
            }
        }

    </div>
    <div class="panel-body">
        <ul class="nav nav-tabs">
            <li class="active">
                <a href="#patientcard_name_tab" data-toggle="tab">@Resources.PatientInfo.AllInfo</a>
            </li>
            <li>
                <a href="#patientcard_medical_tab" data-toggle="tab">@Resources.PatientInfo.MedicalInfo</a>
            </li>
            <li>
                <a href="#patientcard_medical_Bloor_tab" data-toggle="tab">@Resources.PatientInfo.Dental</a>
            </li>
            @*<li>
                    <a href="#patientcard_medical_report_tab" data-toggle="tab">Распечатать отчет</a>
                </li>*@

        </ul>
        @using (Html.BeginForm("Edit", "Patient", FormMethod.Post, new { id = "EditPatienForm", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.PatientId)
            @Html.HiddenFor(model => model.Photo)
            @Html.HiddenFor(model => model.ScheduleRecordId)
            <div id="pPatientVisitInfo" class="tab-content">
                <div class="tab-pane fade in active" id="patientcard_name_tab" data-model-name="PatientModel">
                    <div class="row top15 ">
                        <div class="col-lg-6">
                            @*  <a class="btn btn-success btn-xs" href="/Home/Help" style="float: initial; margin: 15px;font-size: 15px;"><span class="icon16 icomoon-icon-info-2 white"></span> @Resources.Resource.InfoAllBlueButton</a>*@

                            <div class="form-group">
                                <div id="photo_fileupload" class="fileupload fileupload-new" data-name="UserPhoto" data-provides="fileupload">
                                    @*<input type="hidden" name="UserPhoto" accept="image/">*@
                                    <div class="fileupload-new thumbnail" style="width: 200px; height: 150px;">
                                        @if (!String.IsNullOrEmpty(Model.Photo))
                                        {
                                            <img src=@String.Concat("/Photos/", Model.Photo) alt="" style="height: 140px;max-width: initial;" />
                                        }
                                        else
                                        {
                                            <img src="" style="height: 140px;max-width: initial;" alt="" />@*@Url.Content("/Content/assets/css/../img/demoUpload.jpg")*@
                                        }

                                    </div>
                                    <div id="UserPhoto" class="fileupload-preview fileupload-exists thumbnail" style="max-width: 200px; max-height: 150px; line-height: 20px;"></div>
                                    <div>
                                        <span class="btn btn-file btn-primary"><span class="fileupload-new">Select image</span><span class="fileupload-exists">Change</span><input type="file" /></span>
                                        <a href="#" class="btn btn-danger fileupload-exists" data-dismiss="fileupload">Remove</a>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.LastName)
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                <p class="help-block"></p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName)
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                <p class="help-block"></p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.SurName)
                                @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })
                                <p class="help-block"></p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.BirthDate)
                                <div class="input-group" data-model-field="BirthDate">
                                    @{ Html.EnableClientValidation(false); }
                                    @Html.TextBoxFor(model => model.BirthDate, "{0:d}", new { @class = "form-control" })
                                    <span class="input-group-addon" data-model-assoc-field="BirthDate" data-format="{0} лет"></span>
                                </div>
                                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                                @{ Html.EnableClientValidation(true); }
                            </div>
                            <div class="form-group">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.IsMale)
                                    @*<select class="form-control" data-model-field="Gender" data-model-ctype="DropDownList">
                                            <option></option>
                                            <option value="М">Мужской</option>
                                            <option value="Ж">Женский</option>
                                        </select>*@
                                    @Html.DropDownListFor(model => model.IsMale, Model.genderItems, new { @class = "form-control" })
                                    @*@Html.EditorFor(model => model.IsMale, new { htmlAttributes = new { @class = "form-control" } })*@
                                    @Html.ValidationMessageFor(model => model.IsMale, "", new { @class = "text-danger" })
                                    <p class="help-block"></p>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Comment)
                                @Html.TextAreaFor(model => model.Comment, new { @class = "form-control", rows = "2" })
                                @*@Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })*@
                                <p class="help-block"></p>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            @*<div class="col-sm-6 col-lg-4">
                                    <h2 class="h4">Indeterminate</h2>
                                    <p>
                                        <div class="bootstrap-switch bootstrap-switch-wrapper bootstrap-switch-on bootstrap-switch-id-switch-indeterminate bootstrap-switch-animate" style="width: 108px;"><div class="bootstrap-switch-container" style="width: 159px; margin-left: 0px;"><span class="bootstrap-switch-handle-on bootstrap-switch-primary" style="width: 53px;">ON</span><span class="bootstrap-switch-label" style="width: 53px;">&nbsp;</span><span class="bootstrap-switch-handle-off bootstrap-switch-default" style="width: 53px;">OFF</span><input id="switch-indeterminate" type="checkbox" checked="" data-indeterminate="true"></div></div>
                                    </p>
                                    <p>
                                        <button type="button" data-switch-toggle="indeterminate" class="btn btn-default">Toggle</button>
                                        <button type="button" data-switch-get="indeterminate" class="btn btn-default">Get</button>
                                    </p>
                                </div>*@
                            <div class="form-group" style="margin-top: 6%;width: 120px;">
                                <div class="input-group" style="width: 120px;">
                                    @Html.LabelFor(model => model.IsVIP, new { style = "width: 100px;    margin-top: 7px;" })
                                    @*<input class="form-control" data-model-field="Email" maxlength="255">*@

                                    <div class="switch-max" data-on="success" data-off="warning" style="float: right;margin-top: 10px;">
                                        @Html.CheckBoxFor(model => model.IsVIP)
                                        @*<input type="checkbox" checked="checked" data-model-field="EmailNotUse" data-model-vtype="bool" data-model-ctype="CheckBox" data-on-text="ДА" data-off-text="НЕТ" />*@
                                    </div>

                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.MobilePhone)
                                <div class="input-group" style="width: 100%;">
                                    @Html.EditorFor(model => model.MobilePhone, new { htmlAttributes = new { @class = "form-control", onkeyup = "return proverka(this);", onchange = "return proverka(this);" } }) @*, data_mask = "(999) 999-9999"*@
                                    @Html.ValidationMessageFor(model => model.MobilePhone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group" style="width: 100%;">
                                @Html.LabelFor(model => model.HomePhone)

                                <div class="input-group" style="width: 100%;">
                                    @Html.EditorFor(model => model.HomePhone, new { htmlAttributes = new { @class = "form-control", onkeyup = "return proverka(this);", onchange = "return proverka(this);" } }) @*, data_mask = "(999) 999-9999"*@
                                    @Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group ">
                                @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.CountryId, Model.countryItems, "Choose the country", new { @class = "form-control ", Id = "CountryId" })
                                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.CityId, Model.cityItems, "Select a city", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address)
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                <p class="help-block"></p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.WorkPlace)
                                @Html.EditorFor(model => model.WorkPlace, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.WorkPlace, "", new { @class = "text-danger" })
                                <p class="help-block"></p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.AnyContact)
                                @Html.TextAreaFor(model => model.AnyContact, new { @class = "form-control", rows = "1" })
                                @Html.ValidationMessageFor(model => model.AnyContact, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Email)

                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                            </div>

                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="patientcard_medical_tab" data-model-name="PatientModel">
                    <div class="row top15 ">
                        <div class="col-lg-6">
                            @* <a class="btn btn-success btn-xs" href="/Home/Help" style="float: right;">* @Resources.Resource.InfoAllBlueButton</a>*@
                            <div class="form-group">
                                @Html.LabelFor(model => model.Anamnez)
                                @Html.TextAreaFor(model => model.Anamnez, new { @class = "form-control", rows = "5" })
                                @Html.ValidationMessageFor(model => model.Anamnez, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.AlergoStatus)
                                @Html.TextAreaFor(model => model.AlergoStatus, new { @class = "form-control", rows = "5" })
                                @Html.ValidationMessageFor(model => model.AlergoStatus, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ImmunoStatus)
                                @Html.TextAreaFor(model => model.ImmunoStatus, new { @class = "form-control", rows = "5" })
                                @Html.ValidationMessageFor(model => model.ImmunoStatus, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.AdditionalInfo)
                                @Html.TextAreaFor(model => model.AdditionalInfo, new { @class = "form-control", rows = "5" })
                                @Html.ValidationMessageFor(model => model.AdditionalInfo, "", new { @class = "text-danger" })
                            </div>

                        </div>

                    </div>
                </div>
                <div class="tab-pane fade" id="patientcard_medical_Bloor_tab" data-model-name="PatientModel">
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Blore)*@
                        <div class="box">
                            <header>

                                <div class="toolbar">
                                    <div class="btn-group">
                                        <a href="#sortableTable" data-toggle="collapse" class="btn btn-default btn-sm accordion-toggle minimize-box">
                                            <i class="icon-chevron-up"></i>
                                        </a>
                                    </div>
                                </div>
                            </header>
                            <div id="sortableTable" class="body in">
                                <div class="form-group">
                                    <table style="width: 100%; table-layout: fixed;">
                                        <colgroup>
                                            <col style="width: 5%; height: 25px" />
                                            <col style="width: 5%; height: 25px" />
                                            <col style="width: 5%; height: 25px" />
                                            <col style="width: 5%; height: 25px" />
                                            <col style="width: 5%; height: 25px" />
                                            <col style="width: 5%; height: 25px" />
                                            <col style="width: 5%; height: 25px" />
                                            <col style="width: 5%; height: 25px" />
                                            <col style="width: 5%; height: 25px" />
                                            <col style="width: 5%; height: 25px" />
                                            <col style="width: 5%; height: 25px" />
                                            <col style="width: 5%; height: 25px" />
                                            <col style="width: 5%; height: 25px" />
                                            <col style="width: 5%; height: 25px" />
                                            <col style="width: 5%; height: 25px" />
                                            <col style="width: 5%; height: 25px" />
                                            <col style="width: 5%; height: 25px" />
                                        </colgroup>
                                        @if (Model.DentalCards != null && Model.DentalCards.Any())
                                        {
                                            <tr>
                                                <td></td>
                                                @for (int i = 0; i < 16; i++)
                                                {
                                                    <td class="td-class">
                                                        @Html.HiddenFor(m => m.DentalCards[i].DentalCardId)
                                                        @Html.HiddenFor(m => m.DentalCards[i].OrderNumber)
                                                        @Html.TextAreaFor(m => m.DentalCards[i].Description, new { @class = "form-control area2col", rows = "5" })
                                                    </td>
                                                }
                                            </tr>
                                            <tr>
                                                <td></td>
                                                @for (int i = 0; i < 16; i++)
                                                {
                                                    <td>
                                                        @Html.CheckBoxFor(m => m.DentalCards[i].IsCheck, new { @class = "form-control col2" })
                                                    </td>
                                                }
                                            </tr>
                                            <tr class="td-class">
                                                <td></td>
                                                <td>18</td>
                                                <td>17</td>
                                                <td>16</td>
                                                <td>15</td>
                                                <td>14</td>
                                                <td>13</td>
                                                <td>12</td>
                                                <td>11</td>
                                                <td>21</td>
                                                <td>22</td>
                                                <td>23</td>
                                                <td>24</td>
                                                <td>25</td>
                                                <td>26</td>
                                                <td>27</td>
                                                <td>28</td>
                                            </tr>
                                            <tr class="td-class">
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                            </tr>
                                            <tr class="td-class">
                                                <td></td>
                                                <td>48</td>
                                                <td>47</td>
                                                <td>46</td>
                                                <td>45</td>
                                                <td>44</td>
                                                <td>43</td>
                                                <td>42</td>
                                                <td>41</td>
                                                <td>31</td>
                                                <td>32</td>
                                                <td>33</td>
                                                <td>34</td>
                                                <td>35</td>
                                                <td>36</td>
                                                <td>37</td>
                                                <td>38</td>
                                            </tr>
                                            <tr>
                                                <td></td>
                                                @for (int i = 31; i > 15; i--)
                                                {
                                                    <td>
                                                        @Html.CheckBoxFor(m => m.DentalCards[i].IsCheck, new { @class = "form-control col2" })
                                                    </td>
                                                }
                                            </tr>
                                            <tr>
                                                <td></td>
                                                @for (int i = 31; i > 15; i--)
                                                {
                                                    <td class="td-class">
                                                        @Html.HiddenFor(m => m.DentalCards[i].DentalCardId)
                                                        @Html.HiddenFor(m => m.DentalCards[i].OrderNumber)
                                                        @Html.TextAreaFor(m => m.DentalCards[i].Description, new { @class = "form-control area2col", rows = "5" })
                                                    </td>
                                                }
                                            </tr>


                                        }
                                    </table>
                                    <div class="col-lg-12">
                                        @*<a class="btn btn-success btn-xs" href="/Home/Help" style="float: right;">* @Resources.Resource.InfoAllBlueButton</a>*@
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.CommentDentalCard)
                                            @Html.TextAreaFor(model => model.CommentDentalCard, new { @class = "form-control", rows = "3" })
                                            @Html.ValidationMessageFor(model => model.CommentDentalCard, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="row top15">
                <div class="col-md-6 col-md-offset-7" style="width: 100%; float: left;     margin-left: 0%;">
                    @* <a class="btn btn-success" href="/Home/Help" style=" float: left">@Resources.Resource.HelpButton</a>*@
                    <button class="btn btn-default" type="submit" value="Save" style="float: right;"> @Resources.PatientInfo.Save</button>
                    @Html.ActionLink(@Resources.PatientInfo.Cancel, "List", "Patient", null, new { @class = "btn btn-default", @style = "float: right;margin-right: 5px", onclick = "return confirm('The entered data will be lost!')" })

                </div>
            </div>
        }
    </div>
</div>


@section scripts
{
    @*<script type="text/javascript" src="~/Scripts/jquery-1.9.1.min.js"></script>*@
    <script type="text/javascript">
        //$("input#BirthDate").val($("input#BirthDate").val().replace('.','/'));
        $(document).ready(function () {
            $("input#BirthDate").change(
                function () {
                    var sp = $(this).parent().find('span.input-group-addon');
                    var format = $(sp).attr('data-format');
                    var inVal = $(this).val();
                    if (/[0-9]{2}\/[0-9]{2}\/[0-9]{4}/g.exec(inVal) && new Date(inVal) < Date.now()) {
                        var age = calculateAge(new Date(inVal));
                        var text = format.replace('{0}', age); //String.format(format, age);
                        $(sp).text(text);
                    } else
                        $(sp).text('');
                });
            $("input#BirthDate").change();
            $('#upload_docs').click(function () {
                checkLength($(this));
            });

        });

        $('.area2col').each(function () {
            checkLength($(this));
        });

        $('.area2col').on('keyup', function () {
            checkLength($(this));
        });

        $('#CountryId').change(function () {
            CountryAndCityInit();
        });
        CountryAndCityInit();
        /*function CountryAndCityInit() {

            $("#CountryId").chosen({
                search_contains: true
            });

            $("#CityId").chosen({
                search_contains: true
            });

            $('#CountryId').on('change', function (evt, params) {
                var defOption = $('#CityId').find('[value=""]');
                $('#CityId').find('option:not(:first)').remove();
                $('#CityId').trigger('chosen:updated');
                if (params.selected != '') {
                    SendAjax('/UserInfo/GetCityList/', { countryid: params.selected }, filiingCityList);
                }
            });

        };

        function filiingCityList(list) {
            $.each(list, function (i, item) {
                $("#CityId").append($('<option>', {
                    value: item.Value,
                    text: item.Text
                }));
            });
            $('#CityId').trigger('chosen:updated');
        };*/

        function checkLength(item) {
            if (item.val().length > 10)
                item.css("border-color", "red");
            else
                item.css("border-color", "#cccccc");
        };

        function proverka(input) {
            input.value = input.value.replace(/[^\d]/g, '');
            //  input.value = input.value.replace(/[^\d]./g, ''); изначальный шаблон
        };

        //$('#BirthDate').datepicker("destroy");
        $('#BirthDate').datepicker({
            language: '@(LanguageHelper.GetCurrentLanguage())',
            changeMonth: true,
            yearRange: "-80:+0",
            changeYear: true
        });
    </script>
    @*<script src="~/Content/plugins/forms/switch/static/js/bootstrap-switch.js"></script>*@
}